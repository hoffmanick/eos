addPolygons(data = polySites,
color = "red",
weight = 5,
fillColor = "orange",
fillOpacity = 0.35,
popup = ~sitename)  %>%
addCircleMarkers(data = pointSites,
radius = 5,
color = "blue",
fillColor = "blue",
fillOpacity = 0.5,
stroke = FALSE,
popup = ~sitename)
potentials = potentials %>% dplyr::filter(sitename != "junk") %>% dplyr::filter(!str_detect(sitename,"Jensen 1998"))  %>% dplyr::filter(!str_detect(sitename,"Riegel 1965")) %>% dplyr::filter(!str_detect(sitename,"Haile 8A")) %>% dplyr::filter(!str_detect(sitename,"Santa Fe River 8A")) %>% distinct() %>% dplyr::filter(!sitename %in% c("Site 66 (Delcourt et al. 1983)","Site 110 (G.M. Peterson 1978)","Site 10 (Mack, Bryant, and Pell 1978)","LRRB31","Site 106 (Swain unpublished)","Anthony Cave [MALB 29]","Baldy Peak Cave [MALB 29]","Solar Energy Generating Station II [1.76.42]","Luz Solar Trough [1.76.34]", "Site 13 (Delcourt et al. 1983)","Site 14 (Delcourt et al. 1983)","Site 66 (Delcourt et al. 1983)","CHUSKA29","CHUS29","Upper Alturas [UO Loc 2424; CAS Loc 36805]","Site 35 (Heusser 1978)","BECL360","Stand 45 (Mack and Bryant 1974]","Law's [MSv100]","Seven Springs [CE101x3]","Rock House [MS201]","Mobile Bay, MB0810-GC20","Spring Canyon [A-41]","Pratt Cave [TMM-41172]","Little Sunday Canyon Local Fauna [V5414]","Avery Ranch [s:5:8]","Big Juniper House [1595]","Badger House [1453]","Mesa Verde Site 875","La Poudre LP5 Site","SNMN5","SNMN15","ANIM5","ANIM35","COMO5","LPLT5","GATC26","Mile 49 Lac la Ronge Highway","Stations 49-55 (Lichti-Federovich and Ritchie 1968)","TK-49","49 [HFL49]","Valkenswaard N49","Mosquito Lake Site, [PSM-00049]","BOREA24, Mile 49","LR49","ALTAK49","ABD249","Island 35 [10-Q-7]","Hancock Ditch (ditch #39)","Tunica Bayou Site 22","NLA06608-1232","JHMN24 (McAndrews and Wright 1969)","NLA06608-0439","Twin Peaks, AZ","Tucson Mountains, Pima Co., AZ","Vijdt Polder (B49D0349)","Borteldonk (B49F0399)","Halsteren (B49B0566)")) %>%
dplyr::filter(!str_detect(sitename,"Mount Evans Surface")) %>%
dplyr::filter(!str_detect(sitename,"LDDsite")) %>%
dplyr::filter(!str_detect(sitename,"Begin boardwalk")) %>% dplyr::filter(!str_detect(sitename,"unpublished")) %>%
dplyr::filter(!str_detect(sitename,"Colonel's Island Site")) %>%
dplyr::filter(!str_detect(sitename,"Delcourt")) %>% dplyr::filter((state !="California") | state == "California" & str_detect(sitename,"CA"))
datatable(potentials[c(siteid,sitename,state)],rownames=FALSE)
datatable(potentials[c('siteid','sitename','state')],rownames=FALSE)
unique_pot = geojson_sf(potentials$geography) %>% cbind(potentials) %>% distinct(siteid,.keep_all=TRUE)
pointSites = unique_pot[st_geometry_type(unique_pot) == "POINT",]
polySites = unique_pot[st_geometry_type(unique_pot) == "POLYGON",]
leaflet() %>%
addTiles() %>%
addPolygons(data = polySites,
color = "red",
weight = 5,
fillColor = "orange",
fillOpacity = 0.35,
popup = ~sitename)  %>%
addCircleMarkers(data = pointSites,
radius = 5,
color = "blue",
fillColor = "blue",
fillOpacity = 0.5,
stroke = FALSE,
popup = ~sitename)
potentials = potentials %>% dplyr::filter(sitename != "junk") %>% dplyr::filter(!str_detect(sitename,"Jensen 1998"))  %>% dplyr::filter(!str_detect(sitename,"Riegel 1965")) %>% dplyr::filter(!str_detect(sitename,"Haile 8A")) %>% dplyr::filter(!str_detect(sitename,"Santa Fe River 8A")) %>% distinct() %>% dplyr::filter(!sitename %in% c("Site 66 (Delcourt et al. 1983)","Site 110 (G.M. Peterson 1978)","Site 10 (Mack, Bryant, and Pell 1978)","LRRB31","Site 106 (Swain unpublished)","Anthony Cave [MALB 29]","Baldy Peak Cave [MALB 29]","Solar Energy Generating Station II [1.76.42]","Luz Solar Trough [1.76.34]", "Site 13 (Delcourt et al. 1983)","Site 14 (Delcourt et al. 1983)","Site 66 (Delcourt et al. 1983)","CHUSKA29","CHUS29","Upper Alturas [UO Loc 2424; CAS Loc 36805]","Site 35 (Heusser 1978)","BECL360","Stand 45 (Mack and Bryant 1974]","Law's [MSv100]","Seven Springs [CE101x3]","Rock House [MS201]","Mobile Bay, MB0810-GC20","Spring Canyon [A-41]","Pratt Cave [TMM-41172]","Little Sunday Canyon Local Fauna [V5414]","Avery Ranch [s:5:8]","Big Juniper House [1595]","Badger House [1453]","Mesa Verde Site 875","La Poudre LP5 Site","SNMN5","SNMN15","ANIM5","ANIM35","COMO5","LPLT5","GATC26","Mile 49 Lac la Ronge Highway","Stations 49-55 (Lichti-Federovich and Ritchie 1968)","TK-49","49 [HFL49]","Valkenswaard N49","Mosquito Lake Site, [PSM-00049]","BOREA24, Mile 49","LR49","ALTAK49","ABD249","Island 35 [10-Q-7]","Hancock Ditch (ditch #39)","Tunica Bayou Site 22","NLA06608-1232","JHMN24 (McAndrews and Wright 1969)","NLA06608-0439","Twin Peaks, AZ","Tucson Mountains, Pima Co., AZ","Vijdt Polder (B49D0349)","Borteldonk (B49F0399)","Halsteren (B49B0566)","Ossendrecht 49D20-1")) %>%
dplyr::filter(!str_detect(sitename,"Mount Evans Surface")) %>%
dplyr::filter(!str_detect(sitename,"LDDsite")) %>%
dplyr::filter(!str_detect(sitename,"Begin boardwalk")) %>% dplyr::filter(!str_detect(sitename,"unpublished")) %>%
dplyr::filter(!str_detect(sitename,"Colonel's Island Site")) %>%
dplyr::filter(!str_detect(sitename,"Delcourt")) %>% dplyr::filter((state !="California") | state == "California" & str_detect(sitename,"CA"))
datatable(potentials[c('siteid','sitename','state')],rownames=FALSE)
unique_pot = geojson_sf(potentials$geography) %>% cbind(potentials) %>% distinct(siteid,.keep_all=TRUE)
pointSites = unique_pot[st_geometry_type(unique_pot) == "POINT",]
polySites = unique_pot[st_geometry_type(unique_pot) == "POLYGON",]
leaflet() %>%
addTiles() %>%
addPolygons(data = polySites,
color = "red",
weight = 5,
fillColor = "orange",
fillOpacity = 0.35,
popup = ~sitename)  %>%
addCircleMarkers(data = pointSites,
radius = 5,
color = "blue",
fillColor = "blue",
fillOpacity = 0.5,
stroke = FALSE,
popup = ~sitename)
install.packages("dams")
library(dams)
dim(nid_subset)
head(nid_subset,3)
before1930 = nid_subset %>% dplyr::filter(year_completed <= 1930)
names(before1930)
hist(nid_subset$year_completed)
dim(before1930)
before1930 = nid_subset %>% dplyr::filter(year_completed <= 1930) %>% summarize(sum(max_storage))
before1930
before1930 = nid_subset %>%
dplyr::filter(year_completed <= 1930) %>%
drop_na(max_storage) %>% summarize(sum(max_storage))
before1930
before1930 = nid_subset %>%
dplyr::filter(year_completed <= 1930) %>%
drop_na(nid_storage) %>% summarize(sum(nid_storage))
before1970 = nid_subset %>%
dplyr::filter(year_completed > 1930 & year_completed <=1970) %>%
drop_na(nid_storage) %>% summarize(sum(nid_storage))
before1970[[1]]/before1930[[1]]
names(nid_subset)
increase = before1970[[1]]/before1930[[1]]
before1970_types = nid_subset %>%
dplyr::filter(year_completed > 1930 & year_completed <=1970) %>% group_by(owner_type) %>% count()
before1970_types
before1970_types = nid_subset %>%
dplyr::filter(year_completed > 1930 & year_completed <=1970) %>%
group_by(owner_type) %>% count() %>% arrange(desc(n))
before1970_types
before1970_types = nid_subset %>%
dplyr::filter(year_completed > 1930 & year_completed <=1970) %>%
group_by(owner_type) %>% drop_na(nid_storage) %>% summarize(sum(nid_storage)) %>% arrange(desc(n))
before1970_types = nid_subset %>%
dplyr::filter(year_completed > 1930 & year_completed <=1970) %>%
group_by(owner_type) %>% drop_na(nid_storage) %>%
summarize(sum(nid_storage))
before1970_types
before1970_types = nid_subset %>%
dplyr::filter(year_completed > 1930 & year_completed <=1970) %>%
group_by(owner_type) %>% drop_na(nid_storage) %>%
summarize(sum = sum(nid_storage)) %>% arrange(desc(sum))
before1970_types
before1970[[1]]
617238556/before1970[[1]]
160588299/before1970[[1]]
before1970 = nid_subset %>%
dplyr::filter( year_completed <=1970) %>%
drop_na(nid_storage) %>% summarize(sum(nid_storage))
before1970_types = nid_subset %>%
dplyr::filter(year_completed > 1930 & year_completed <=1970) %>%
group_by(owner_type) %>% drop_na(nid_storage) %>%
summarize(sum = sum(nid_storage)) %>% arrange(desc(sum))
increase = before1970[[1]]/before1930[[1]]
increase
before1970[[1]]/(10^6)
knitr::opts_chunk$set(echo = TRUE)
library(httr)
library(dplyr)
library(DT)
library(geojsonsf)
library(osmdata)
library(rosm)
library(rmapshaper)
library(tmap)
library(sf)
library(leaflet)
#lats = c(46, 46, 42.42, 42.42)
#lons = c(-104.3, -96, -96, -104.3)
lats <- c(45.944106, 45.933153, 45.818137, 45.604536, 45.412843, 45.297827, 43.501391, 43.479483, 43.397329, 43.222067, 43.123482, 43.052282, 42.855112, 42.707235, 42.488157, 42.515542, 42.657942, 42.844158, 42.844158, 42.866066, 42.767481, 42.94822, 42.997512, 42.997512, 43.002989, 43.002989, 44.996596, 44.996596, 45.944106)
lons <- c(-104.047534, -96.560556, -96.582464, -96.856311, -96.681049, -96.451017, -96.451017, -96.582464, -96.527695, -96.560556, -96.434587, -96.511264, -96.544125, -96.631756, -96.44554, -96.626279, -96.692003, -97.217789, -97.688806, -97.831206, -97.951699, -98.466531, -98.499393, -101.626726, -103.324578, -104.053011, -104.058488, -104.042057, -104.047534)
# Create a data frame with coordinates
coordinates = data.frame(lat = lats, lon = lons)
# Convert to sf object and create a polygon
coordinates_sf = coordinates %>%
st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
summarise(geometry = st_combine(geometry)) %>%
st_cast("POLYGON")
# Plot to check
tm_shape(osm.raster(coordinates_sf)) +
tm_rgb() +
tm_shape(coordinates_sf) +
tm_polygons(alpha = 0.5)
coord_json = sf_geojson(coordinates_sf)
sites = content(GET(paste0("https://api.neotomadb.org/v2.0/data/sites?loc=",coord_json,"&limit=9999&offset=0")))$data
idx = 0
for (i in seq(length(sites))) {
for (j in seq(length(sites[[i]]$collectionunits))) {
for (k in seq(length(sites[[i]]$collectionunits[[j]]$datasets))) {
idx = idx + 1
}
}
}
sites_mat = matrix(nrow=idx,ncol=11)
idx2 = 0
for (i in seq(length(sites))) {
for (j in seq(length(sites[[i]]$collectionunits))) {
for (k in seq(length(sites[[i]]$collectionunits[[j]]$datasets))) {
idx2 = idx2 + 1
for (m in seq(5)) {
if (!is.null(sites[[i]][[m]])) {
sites_mat[[idx2, m]] = sites[[i]][[m]]
}
}
if (!is.null(sites[[i]]$collectionunits[[j]]$handle)) {
sites_mat[[idx2,6]] = sites[[i]]$collectionunits[[j]]$handle
}
if (!is.null(sites[[i]]$collectionunits[[j]]$collectionunit)) {
sites_mat[[idx2,7]] = sites[[i]]$collectionunits[[j]]$collectionunit
}
if (!is.null(sites[[i]]$collectionunits[[j]]$collectionunitid)) {
sites_mat[[idx2,8]] = sites[[i]]$collectionunits[[j]]$collectionunitid
}
if (!is.null(sites[[i]]$collectionunits[[j]]$collectionunittype)) {
sites_mat[[idx2,9]] = sites[[i]]$collectionunits[[j]]$collectionunittype
}
if (!is.null(sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasetid)) {
sites_mat[[idx2,10]] = sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasetid
}
if (!is.null(sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasettype)) {
sites_mat[[idx2,11]] = sites[[i]]$collectionunits[[j]]$dataset[[k]]$datasettype
}
}
}
}
sites_sd_df = as.data.frame(sites_mat)
names(sites_sd_df) = c("siteid","sitename","sitedescription","geography","altitude","handle","collectionunit","collectionunitid","collectionunittype","datasetid","datasettype")
sites_sd_sf = geojson_sf(sites_sd_df$geography) %>% cbind(sites_sd_df)
datasetids = sites_sd_df %>% dplyr::distinct(datasetid)
#datasets_neo = get_datasets(as.numeric(datasetids$datasetid),all_data=TRUE)
#data = samples(get_downloads(datasets_neo,all_data=TRUE))
datatable(sites_sd_df,rownames=FALSE)
sites_sd_sf_unique = sites_sd_sf %>% distinct(siteid,.keep_all=TRUE)
pointSites = sites_sd_sf_unique[st_geometry_type(sites_sd_sf_unique) == "POINT",]
polySites = sites_sd_sf_unique[st_geometry_type(sites_sd_sf_unique) == "POLYGON",]
leaflet() %>%
addTiles() %>%
addPolygons(data = polySites,
color = "red",
weight = 5,
fillColor = "orange",
fillOpacity = 0.35,
popup = ~sitename)  %>%
addCircleMarkers(data = pointSites,
radius = 5,
color = "blue",
fillColor = "blue",
fillOpacity = 0.2,
stroke = FALSE,
popup = ~sitename)
datatable(st_drop_geometry(sites_sd_sf_unique),rownames=FALSE)
rezes = read_sf("tl_2019_us_aiannh.shp")
coordinates_sf = st_transform(coordinates_sf,crs=st_crs(rezes))
sd_rezes = rezes %>% dplyr::select(NAME) %>% st_filter(coordinates_sf)
leaflet() %>%
addTiles() %>%
addPolygons(data = sd_rezes,
color = "black",
weight = 5,
fillColor = "white",
fillOpacity = 0.35,
popup = ~NAME) %>%
addPolygons(data = polySites,
color = "red",
weight = 5,
fillColor = "orange",
fillOpacity = 0.35,
popup = ~sitename)  %>%
addCircleMarkers(data = pointSites,
radius = 5,
color = "blue",
fillColor = "blue",
fillOpacity = 0.2,
stroke = FALSE,
popup = ~sitename)
sites_sd_sf_unique = st_transform(sites_sd_sf_unique,crs=st_crs(rezes))
tribal_sites = sites_sd_sf_unique %>% st_filter(sd_rezes)
datatable(st_drop_geometry(tribal_sites),rownames=FALSE)
trinomials = sites_sd_sf_unique$sitename[grep("39",sites_sd_sf_unique$sitename)]
smiths = sites_sd_sf_unique %>% dplyr::filter(sitename %in% trinomials) %>% dplyr::filter(sitename!= "NLA06608-0439")
pointSites_s = smiths[st_geometry_type(smiths) == "POINT",]
polySites_s = smiths[st_geometry_type(smiths) == "POLYGON",]
leaflet() %>%
addTiles() %>%
addPolygons(data = sd_rezes,
color = "black",
weight = 5,
fillColor = "white",
fillOpacity = 0.35,
popup = ~NAME) %>%
addPolygons(data = polySites,
color = "blue",
weight = 5,
fillColor = "blue",
fillOpacity = 0.35,
popup = ~sitename)  %>%
addCircleMarkers(data = pointSites,
radius = 5,
color = "blue",
fillColor = "blue",
fillOpacity = 0.2,
stroke = FALSE,
popup = ~sitename) %>%
addPolygons(data = polySites_s,
color = "red",
weight = 5,
fillColor = "red",
fillOpacity = 0.35,
popup = ~sitename)  %>%
addCircleMarkers(data = pointSites_s,
radius = 5,
color = "red",
fillColor = "red",
fillOpacity = 0.2,
stroke = FALSE,
popup = ~sitename)
smiths_tribal = smiths %>% st_filter(sd_rezes)
datatable(st_drop_geometry(smiths),rownames=FALSE)
#E,warning=FALSE,message=FALSE}
tables = c("publications", "datasetpublications")
for (i in seq(length(tables))) {
table = tables[[i]]
dslinks = content(GET(paste0("https://api.neotomadb.org/v2.0/data/dbtables?table=",table,"&limit=75000&offset=0")))$data
if (table == "publications") {
dsl_df = matrix(nrow=length(dslinks),ncol=(length(dslinks[[1]]) - 2))
for (j in seq(1,length(dslinks))) {
for (k in seq((length(dslinks[[1]])) - 2)) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
else {
dsl_df = matrix(nrow=length(dslinks),ncol=length(dslinks[[1]]))
for (j in seq(1,length(dslinks))) {
for (k in seq(length(dslinks[[1]]))) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
dsl_df = as.data.frame(dsl_df)
if (table =="publications") {
names(dsl_df) = names(dslinks[[1]])[1:(length(dslinks[[1]])-2)]  }
else {
names(dsl_df) = names(dslinks[[1]])
}
assign(paste0(table,"_df"), dsl_df)
}
smithpubs = datasetpublications_df %>% dplyr::filter(datasetid %in% smiths$datasetid) %>% left_join(publications_df, by=join_by(publicationid))
datatable(smithpubs,rownames=FALSE)
smiths_tribal %>% st_drop_geometry() %>% datatable(rownames=FALSE)
writeClipboard(smiths_tribal$sitename,sep="\n")
help("writeClipboard")
writeClipboard(smiths_tribal$sitename,collapse="\n")
writeClipboard(paste(smiths_tribal$sitename,collapse="\n"))
writeClipboard(paste(smiths_tribal$siteid,collapse="\n"))
writeClipboard(paste(smiths$sitename,collapse="\n"))
writeClipboard(paste(smiths$siteid,collapse="\n"))
View(sites_sd_sf_unique)
View(smiths)
tables = c("publications", "datasetpublications","sites")
for (i in seq(length(tables))) {
table = tables[[i]]
dslinks = content(GET(paste0("https://api.neotomadb.org/v2.0/data/dbtables?table=",table,"&limit=75000&offset=0")))$data
if (table == "publications") {
dsl_df = matrix(nrow=length(dslinks),ncol=(length(dslinks[[1]]) - 2))
for (j in seq(1,length(dslinks))) {
for (k in seq((length(dslinks[[1]])) - 2)) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
else {
dsl_df = matrix(nrow=length(dslinks),ncol=length(dslinks[[1]]))
for (j in seq(1,length(dslinks))) {
for (k in seq(length(dslinks[[1]]))) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
dsl_df = as.data.frame(dsl_df)
if (table =="publications") {
names(dsl_df) = names(dslinks[[1]])[1:(length(dslinks[[1]])-2)]  }
else {
names(dsl_df) = names(dslinks[[1]])
}
assign(paste0(table,"_df"), dsl_df)
}
sites2 = sites_df %>% dplyr::filter(siteid %in% smiths$siteid)
View(sites2)
library(lubridate)
as.Date(sites$recdatecreated)
as.Date(sites2$recdatecreated)
sites2 = sites_df %>% dplyr::filter(siteid %in% smiths$siteid) %>% mutate(date = as.Date(recdatecreated))
latesites = sites_df %>% dplyr::filter(siteid %in% smiths$siteid) %>% mutate(date = as.Date(recdatecreated)) %>% dplyr::filter(year(date) >2013)
View(latesites)
tables = c("publications", "datasetpublications","sites","dataprocessors")
for (i in seq(length(tables))) {
table = tables[[i]]
dslinks = content(GET(paste0("https://api.neotomadb.org/v2.0/data/dbtables?table=",table,"&limit=75000&offset=0")))$data
if (table == "publications") {
dsl_df = matrix(nrow=length(dslinks),ncol=(length(dslinks[[1]]) - 2))
for (j in seq(1,length(dslinks))) {
for (k in seq((length(dslinks[[1]])) - 2)) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
else {
dsl_df = matrix(nrow=length(dslinks),ncol=length(dslinks[[1]]))
for (j in seq(1,length(dslinks))) {
for (k in seq(length(dslinks[[1]]))) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
dsl_df = as.data.frame(dsl_df)
if (table =="publications") {
names(dsl_df) = names(dslinks[[1]])[1:(length(dslinks[[1]])-2)]  }
else {
names(dsl_df) = names(dslinks[[1]])
}
assign(paste0(table,"_df"), dsl_df)
}
names(dataprocessors_df)
tables = c("publications", "datasetpublications","sites","dataprocessors","collectionunits","datasets")
for (i in seq(length(tables))) {
table = tables[[i]]
dslinks = content(GET(paste0("https://api.neotomadb.org/v2.0/data/dbtables?table=",table,"&limit=75000&offset=0")))$data
if (table == "publications") {
dsl_df = matrix(nrow=length(dslinks),ncol=(length(dslinks[[1]]) - 2))
for (j in seq(1,length(dslinks))) {
for (k in seq((length(dslinks[[1]])) - 2)) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
else {
dsl_df = matrix(nrow=length(dslinks),ncol=length(dslinks[[1]]))
for (j in seq(1,length(dslinks))) {
for (k in seq(length(dslinks[[1]]))) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
dsl_df = as.data.frame(dsl_df)
if (table =="publications") {
names(dsl_df) = names(dslinks[[1]])[1:(length(dslinks[[1]])-2)]  }
else {
names(dsl_df) = names(dslinks[[1]])
}
assign(paste0(table,"_df"), dsl_df)
}
tables = c("publications", "datasetpublications","sites","dataprocessors","collectionunits","datasets")
for (i in seq(length(tables))) {
table = tables[[i]]
dslinks = content(GET(paste0("https://api.neotomadb.org/v2.0/data/dbtables?table=",table,"&limit=75000&offset=0")))$data
if (table == "publications") {
dsl_df = matrix(nrow=length(dslinks),ncol=(length(dslinks[[1]]) - 2))
for (j in seq(1,length(dslinks))) {
for (k in seq((length(dslinks[[1]])) - 2)) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
else {
dsl_df = matrix(nrow=length(dslinks),ncol=length(dslinks[[1]]))
for (j in seq(1,length(dslinks))) {
for (k in seq(length(dslinks[[1]]))) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
dsl_df = as.data.frame(dsl_df)
if (table =="publications") {
names(dsl_df) = names(dslinks[[1]])[1:(length(dslinks[[1]])-2)]  }
else {
names(dsl_df) = names(dslinks[[1]])
}
assign(paste0(table,"_df"), dsl_df)
}
latesites2 = sites_df %>% dplyr::filter(siteid %in% smiths$siteid) %>% mutate(date = as.Date(recdatecreated)) %>% dplyr::filter(year(date) >2013) %>% left_join(collectionunits_df,by=join_by(collectionunitid))  %>% left_join(datasets_df,by=join_by(datasetid))
latesites1 = sites_df %>% dplyr::filter(siteid %in% smiths$siteid) %>% mutate(date = as.Date(recdatecreated)) %>% dplyr::filter(year(date) >2013)
latesites2 = smiths %>% dplyr::filter(siteid %in% latesites1$siteid) %>% left_join(collectionunits_df,by=join_by(collectionunitid))  %>% left_join(datasets_df,by=join_by(datasetid))
latesites2$datasetid
dataprocessors_df %>% dplyr::filter(datasetid %in% latesites2$datasetid)
tables = c("publications", "datasetpublications","sites","dataprocessors","collectionunits","datasets","contacts")
for (i in seq(length(tables))) {
table = tables[[i]]
dslinks = content(GET(paste0("https://api.neotomadb.org/v2.0/data/dbtables?table=",table,"&limit=75000&offset=0")))$data
if (table == "publications") {
dsl_df = matrix(nrow=length(dslinks),ncol=(length(dslinks[[1]]) - 2))
for (j in seq(1,length(dslinks))) {
for (k in seq((length(dslinks[[1]])) - 2)) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
else {
dsl_df = matrix(nrow=length(dslinks),ncol=length(dslinks[[1]]))
for (j in seq(1,length(dslinks))) {
for (k in seq(length(dslinks[[1]]))) {
if (!is.null(dslinks[[j]][[k]])) {
dsl_df[j,k] = dslinks[[j]][[k]]
}
}
}
}
dsl_df = as.data.frame(dsl_df)
if (table =="publications") {
names(dsl_df) = names(dslinks[[1]])[1:(length(dslinks[[1]])-2)]  }
else {
names(dsl_df) = names(dslinks[[1]])
}
assign(paste0(table,"_df"), dsl_df)
}
dataprocessors_df
dataprocessors_df %>% dplyr::filter(datasetid %in% latesites2$datasetid) %>% dplyr::left_join(contacts_df,by=join_by(contactid))
latesites2
dataprocessors_df %>% dplyr::filter(datasetid %in% latesites2$datasetid) %>% dplyr::left_join(contacts_df,by=join_by(contactid))
smith_datasets =smiths %>% left_join(collectionunits_df,by=join_by(collectionunitid))  %>% left_join(datasets_df,by=join_by(datasetid))
smith_datasets$datasetid
neodata = get_datasets(c(smith_datasets$datasetid),all_data=TRUE)
c(smith_datasets$datasetid)
library(neotoma2)
c(smith_datasets$datasetid)[1]
neodata = get_datasets(c(smith_datasets$datasetid)[1],all_data=TRUE)
